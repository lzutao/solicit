var N=null,E="",T="t",U="u",searchIndex={};
var R=["stream_id","headers","CompressionError","frameheader","frameheaderbuffer","result","solicit::http::frame","datachunk","streamid","dataframe","EndStream","streamdependency","Creates a new `HeadersFrame` with the given header…","headersframe","is_end_of_stream","Returns whther this frame ends the stream it is associated…","set_padding","set_flag","Sets the given flag for the frame.","rststreamframe","errorcode","settings","httpsetting","settingsframe","error_code","Returns the interpreted error code of the frame. Any…","raw_error_code","Returns the original raw error code of the frame. If the…","payload_len","with_data","Creates a new `WindowUpdateFrame` that will increment the…","windowupdateframe","rawframe","serialize","solicit::http","DataChunk","DataFrame","HeadersFrame","RstStreamFrame","SettingsFrame","PingFrame","GoawayFrame","WindowUpdateFrame","A trait that should be implemented by types that can…","httpresult","httpframe","from_raw","endstream","rst_stream","sendstatus","A phantom type for the `DefaultSessionState` struct that…","defaultsessionstate","httpconnection","pingframe","option","Inserts the given `Stream` into the session's state,…","new_data_chunk","header","streamdataerror","streamdatachunk","streamstate","Updates the `Stream` status to indicate that it is closed…","defaultstream","client","tlsconnector","sslcontext","tlsconnecterror","solicit::http::client","clientstream","Creates a new `CleartextConnector` that will attempt to…","cleartextconnector","httpscheme","expect_settings","send_ping","handle_next_frame","send_next_data","server","The module contains a number of reusable components for…","The state of the session associated to this client…","with_connection","Returns the scheme of the underlying `HttpConnection`.","sender","Queues a new DATA frame onto the underlying `SendFrame`.","headerpart","with_debug_data","connectionerror","debug_data","ownedheader","simpleclient","response","with_connector","clientconnecterror","receiver","staticresponse","solicit","simpleserver","try_from","try_into","borrow_mut","to_owned","clone_into","type_id","to_string","solicit::http::frame::data","solicit::http::frame::headers","solicit::http::frame::rst_stream","solicit::http::frame::settings","solicit::http::frame::goaway","solicit::http::frame::ping","solicit::http::frame::window_update","solicit::http::transport","solicit::http::connection","solicit::http::session","solicit::http::priority","solicit::http::client::tls","solicit::http::server","solicit::client","solicit::server","serialize_into","bitmask","Tests if the given flag is set for the frame.","get_stream_id","Returns the `StreamId` of the stream to which the frame is…","get_header","Returns a `FrameHeader` based on the current state of the…","headersflag","settingsflag","recv_frame","new_headers","end_of_stream","new_settings","insert_outgoing","insert_incoming","get_stream_ref","get_stream_mut","remove_stream","streamiter","set_headers","set_state","get_data_chunk","get_next_chunk","cleartextconnecterror","httperror","dataflag","windowsize","goawayframe","formatter","description","ErrorCode","HttpError","HttpScheme","FrameBuilder","StreamDependency","HeadersFlag","HttpSetting","SettingsFlag","TransportStream","TransportReceiveFrame","HttpConnection","HttpFrame","SendStatus","SendFrame","ReceiveFrame","HttpConnectionSender","DefaultStream","StreamState","StreamDataError","StreamDataChunk","SessionState","DefaultSessionState","DataPrioritizer","SimplePrioritizer","ClientStream","CleartextConnector","RequestStream","ClientConnection","TlsConnector","TlsConnectError","HttpConnect","ClientSession","ServerConnection","StreamFactory","ServerSession","ConnectionError","WindowSize","SimpleClient","ServerRequest","SimpleServer","HeaderPart","StreamIter","CleartextConnectError","OwnedHeader"];

searchIndex["solicit"]={"doc":E,"i":[[0,"http",R[94],"The module implements the framing layer of HTTP/2 and…",N,N],[3,R[188],R[34],"A convenience struct representing a part of a header…",N,N],[3,"Header",E,"Represents an HTTP/2 header. Allows both the name and the…",N,N],[3,R[183],E,"The struct represents a connection error arising on an…",N,N],[3,R[184],E,"The struct represents the size of a flow control window.",N,N],[3,"Response",E,"A struct representing the full raw response received on an…",N,N],[12,R[0],E,"The ID of the stream to which the response is associated.…",0,N],[12,R[1],E,"Exposes all the raw response headers, including the…",0,N],[12,"body",E,"The full body of the response as an uninterpreted sequence…",0,N],[3,"Request",E,"A struct representing a full HTTP/2 request, along with…",N,N],[12,R[0],E,E,1,N],[12,R[1],E,E,1,N],[12,"body",E,E,1,N],[4,R[148],E,"The enum represents an error code that are used in…",N,N],[13,"NoError",E,"The associated condition is not a result of an error. For…",2,N],[13,"ProtocolError",E,"The endpoint detected an unspecific protocol error. This…",2,N],[13,"InternalError",E,"The endpoint encountered an unexpected internal error.",2,N],[13,"FlowControlError",E,"The endpoint detected that its peer violated the…",2,N],[13,"SettingsTimeout",E,"The endpoint sent a SETTINGS frame but did not receive a…",2,N],[13,"StreamClosed",E,"The endpoint received a frame after a stream was…",2,N],[13,"FrameSizeError",E,"The endpoint received a frame with an invalid size.",2,N],[13,"RefusedStream",E,"The endpoint refused the stream prior to performing any…",2,N],[13,"Cancel",E,"Used by the endpoint to indicate that the stream is no…",2,N],[13,R[2],E,"The endpoint is unable to maintain the header compression…",2,N],[13,"ConnectError",E,"The connection established in response to a CONNECT…",2,N],[13,"EnhanceYourCalm",E,"The endpoint detected that its peer is exhibiting a…",2,N],[13,"InadequateSecurity",E,"The underlying transport has properties that do not meet…",2,N],[13,"Http11Required",E,"The endpoint requires that HTTP/1.1 be used instead of…",2,N],[4,R[149],E,"An enum representing errors that can arise when performing…",N,N],[13,"IoError",E,"The underlying IO layer raised an error",3,N],[13,"InvalidFrame",E,"The HTTP/2 connection received an invalid HTTP/2 frame",3,N],[13,"PeerConnectionError",E,"The peer indicated a connection error",3,N],[13,R[2],E,"The HPACK decoder was unable to decode a header chunk and…",3,N],[13,"WindowSizeOverflow",E,"Indicates that the local peer has discovered an overflow…",3,N],[13,"UnknownStreamId",E,E,3,N],[13,"UnableToConnect",E,E,3,N],[13,"MalformedResponse",E,E,3,N],[13,"Other",E,E,3,N],[4,R[150],E,"An enum representing the two possible HTTP schemes.",N,N],[13,"Http",E,"The variant corresponding to `http://`",4,N],[13,"Https",E,"The variant corresponding to `https://`",4,N],[0,"frame",E,"The module contains the implementation of HTTP/2 frames.",N,N],[3,"NoFlag",R[6],"A helper struct that can be used by all frames that do not…",N,N],[3,"RawFrame",E,"A struct that defines the format of the raw HTTP/2 frame,…",N,N],[5,"unpack_header",E,"Deconstructs a `FrameHeader` into its corresponding 4…",N,[[[R[4]]],[R[3]]]],[5,"pack_header",E,"Constructs a buffer of 9 bytes that represents the given…",N,[[[R[3]]],[R[4]]]],[0,"builder",E,"Defines the `FrameBuilder` trait and some default…",N,N],[8,R[151],"solicit::http::frame::builder","A trait that provides additional methods for serializing…",N,N],[11,"write_header",E,"Write the given frame header as the next octets (i.e.…",5,[[["self"],[R[3]]],[R[5]]]],[11,"overwrite_header",E,"Overwrite the previously written header, assuming it's the…",5,[[["self"],[R[3]]],[R[5]]]],[11,"copy_bytes_from",E,"Copy all available bytes from the given `io::Read` instance.",5,[[["self"],["r"]],[[R[5],["u64"]],["u64"]]]],[11,"write_padding",E,"Write the given number of padding octets.",5,[[["self"],["u8"]],[R[5]]]],[11,"write_u32",E,"Write the given unsigned 32 bit integer to the underlying…",5,[[["self"],["u32"]],[R[5]]]],[0,"data",R[6],"The module contains the implementation of the `DATA` frame…",N,N],[3,R[35],R[103],"A helper struct that allows the chunk to be either…",N,N],[3,R[36],E,"A struct representing the DATA frames of HTTP/2, as…",N,N],[12,"data",E,"The data found in the frame as an opaque byte sequence. It…",6,N],[4,"DataFlag",E,"An enum representing the flags that a `DataFrame` can…",N,N],[13,R[10],E,E,7,N],[13,"Padded",E,E,7,N],[11,"new",E,"Creates a new empty `DataFrame`, associated to the stream…",6,[[[R[8]]],[R[9]]]],[11,R[29],E,"Creates a new `DataFrame` with the given `DataChunk`.",6,[[[R[7]],["into",[R[7]]],[R[8]]],[R[9]]]],[11,"is_padded",E,"Returns `true` if the DATA frame is padded, otherwise false.",6,[[["self"]],["bool"]]],[11,R[14],E,R[15],6,[[["self"]],["bool"]]],[11,R[16],E,"Sets the number of bytes that should be used as padding…",6,[[["self"],["u8"]]]],[11,R[28],E,"Returns the total length of the payload, taking into…",6,[[["self"]],["u32"]]],[11,R[17],E,R[18],6,[[["self"],[R[143]]]]],[0,R[1],R[6],"The module contains the implementation of the `HEADERS`…",N,N],[3,R[152],R[104],"The struct represents the dependency information that can…",N,N],[12,R[0],E,"The ID of the stream that a particular stream depends on",8,N],[12,"weight",E,"The weight for the stream. The value exposed (and set)…",8,N],[12,"is_exclusive",E,"A flag indicating whether the stream dependency is…",8,N],[3,R[37],E,"A struct representing the HEADERS frames of HTTP/2, as…",N,N],[12,R[0],E,"The ID of the stream with which this frame is associated",9,N],[12,"stream_dep",E,"The stream dependency information, if any.",9,N],[12,"padding_len",E,"The length of the padding, if any.",9,N],[4,R[153],E,"An enum representing the flags that a `HeadersFrame` can…",N,N],[13,R[10],E,E,10,N],[13,"EndHeaders",E,E,10,N],[13,"Padded",E,E,10,N],[13,"Priority",E,E,10,N],[11,"new",E,"Creates a new `StreamDependency` with the given stream ID,…",8,[[["u8"],["bool"],[R[8]]],[R[11]]]],[11,"parse",E,"Parses the first 5 bytes in the buffer as a…",8,[[],[R[11]]]],[11,R[33],E,"Serializes the `StreamDependency` into a 5-byte buffer…",8,[[["self"]]]],[11,"new",E,R[12],9,[[["vec",["u8"]],[R[8]],["u8"]],[R[13]]]],[11,"with_dependency",E,R[12],9,[[["u8"],[R[11]],["vec",["u8"]],[R[8]]],[R[13]]]],[11,"is_headers_end",E,"Returns whether this frame ends the headers. If not, there…",9,[[["self"]],["bool"]]],[11,R[14],E,R[15],9,[[["self"]],["bool"]]],[11,R[16],E,"Sets the padding length for the frame, as well as the…",9,[[["self"],["u8"]]]],[11,"header_fragment",E,E,9,[[["self"]]]],[11,R[17],E,R[18],9,[[["self"],[R[125]]]]],[0,R[48],R[6],"The module contains the implementation of the `RST_STREAM`…",N,N],[3,R[38],R[105],"The struct represents the `RST_STREAM` HTTP/2 frame.",N,N],[17,"RST_STREAM_FRAME_LEN",E,"The total allowed size for the `RST_STREAM` frame payload.",N,N],[17,"RST_STREAM_FRAME_TYPE",E,"The frame type of the `RST_STREAM` frame.",N,N],[11,"new",E,"Constructs a new `RstStreamFrame` with the given…",11,[[[R[20]],[R[8]]],[R[19]]]],[11,"with_raw_error_code",E,"Constructs a new `RstStreamFrame` that will use the given…",11,[[["u32"],[R[8]]],[R[19]]]],[11,R[24],E,R[25],11,[[["self"]],[R[20]]]],[11,R[26],E,R[27],11,[[["self"]],["u32"]]],[0,R[21],R[6],"The module contains the implementation of the `SETTINGS`…",N,N],[3,R[39],R[106],"A struct representing the SETTINGS frames of HTTP/2, as…",N,N],[12,R[21],E,"Contains all the settings that are currently set in the…",12,N],[4,R[154],E,"An enum that lists all valid settings that can be sent in…",N,N],[13,"HeaderTableSize",E,E,13,N],[13,"EnablePush",E,E,13,N],[13,"MaxConcurrentStreams",E,E,13,N],[13,"InitialWindowSize",E,E,13,N],[13,"MaxFrameSize",E,E,13,N],[13,"MaxHeaderListSize",E,E,13,N],[4,R[155],E,"An enum representing the flags that a `SettingsFrame` can…",N,N],[13,"Ack",E,E,14,N],[11,"from_id",E,"Creates a new `HttpSetting` with the correct variant…",13,[[["u16"],["u32"]],[[R[54],[R[22]]],[R[22]]]]],[11,"get_id",E,"Returns the setting ID as an unsigned 16 bit integer, as…",13,[[["self"]],["u16"]]],[11,"get_val",E,"Gets the setting value by unpacking it from the wrapped…",13,[[["self"]],["u32"]]],[11,"new",E,"Creates a new `SettingsFrame`",12,[[],[R[23]]]],[11,"new_ack",E,"A convenience constructor that returns a `SettingsFrame`…",12,[[],[R[23]]]],[11,"add_setting",E,"Adds the given setting to the frame.",12,[[["self"],[R[22]]]]],[11,"set_ack",E,"Sets the ACK flag for the frame. This method is just a…",12,[[["self"]]]],[11,"is_ack",E,"Checks whether the `SettingsFrame` has an ACK attached to…",12,[[["self"]],["bool"]]],[11,R[17],E,R[18],12,[[["self"],[R[126]]]]],[0,"goaway",R[6],"Implements the `GOAWAY` HTTP/2 frame.",N,N],[3,R[41],R[107],"The struct represents the `GOAWAY` HTTP/2 frame.",N,N],[17,"GOAWAY_MIN_FRAME_LEN",E,"The minimum size for the `GOAWAY` frame payload. It is 8…",N,N],[17,"GOAWAY_FRAME_TYPE",E,"The frame type of the `GOAWAY` frame.",N,N],[11,"new",E,"Create a new `GOAWAY` frame with the given error code and…",15,[[[R[20]],[R[8]]],["self"]]],[11,R[84],E,"Create a new `GOAWAY` frame with the given parts.",15,[[["u32"],[R[8]]],["self"]]],[11,R[24],E,R[25],15,[[["self"]],[R[20]]]],[11,R[26],E,R[27],15,[[["self"]],["u32"]]],[11,"last_stream_id",E,"Returns the associated last stream ID.",15,[[["self"]],[R[8]]]],[11,R[86],E,"Returns the debug data associated with the frame.",15,[[["self"]],[R[54]]]],[11,R[28],E,"Returns the total length of the frame's payload, including…",15,[[["self"]],["u32"]]],[0,"ping",R[6],"Implements the `PING` HTTP/2 frame.",N,N],[3,"PingFlag",R[108],E,N,N],[3,R[40],E,"The struct represents the `PINg` HTTP/2 frame.",N,N],[17,"PING_FRAME_LEN",E,"Ping frames are always 8 bytes",N,N],[17,"PING_FRAME_TYPE",E,"The frame type of the `PING` frame.",N,N],[11,"new",E,"Create a new `PING` frame",16,[[],["self"]]],[11,"new_ack",E,"Create a new PING frame with ACK set",16,[[["u64"]],["self"]]],[11,R[29],E,"Create a new `PING` frame with the given opaque_data",16,[[["u64"]],["self"]]],[11,"is_ack",E,E,16,[[["self"]],["bool"]]],[11,"opaque_data",E,E,16,[[["self"]],["u64"]]],[0,"window_update",R[6],"Implements the `WINDOW_UPDATE` HTTP/2 frame.",N,N],[3,R[42],R[109],"The struct represents the `WINDOW_UPDATE` HTTP/2 frame.",N,N],[17,"WINDOW_UPDATE_FRAME_LEN",E,"The minimum size for the `WINDOW_UPDATE` frame payload.",N,N],[17,"WINDOW_UPDATE_FRAME_TYPE",E,"The frame type of the `WINDOW_UPDATE` frame.",N,N],[11,"for_connection",E,R[30],17,[[["u32"]],[R[31]]]],[11,"for_stream",E,R[30],17,[[["u32"],[R[8]]],[R[31]]]],[11,"increment",E,"Returns the window increment indicated by the frame.",17,[[["self"]],["u32"]]],[6,"FrameHeaderBuffer",R[6],"An alias for the 9-byte buffer that each HTTP/2 frame…",N,N],[6,"FrameHeader",E,"An alias for the 4-tuple representing the components of…",N,N],[17,"FRAME_HEADER_LEN",E,E,N,N],[8,"FrameIR",E,"A trait that types that are an intermediate representation…",N,N],[10,R[118],E,"Write out the on-the-wire representation of the frame into…",18,[[["b"]],[R[5]]]],[8,"Flag",E,"A trait that all HTTP/2 frame header flags need to…",N,N],[10,R[119],E,"Returns a bit mask that represents the flag.",19,[[["self"]],["u8"]]],[8,"Frame",E,"A trait that all HTTP/2 frame structs need to implement.",N,N],[16,"FlagType",E,"The type that represents the flags that the particular…",20,N],[10,R[46],E,"Creates a new `Frame` from the given `RawFrame` (i.e.…",20,[[[R[32]]],[R[54]]]],[10,"is_set",E,R[120],20,[[["self"]],["bool"]]],[10,R[121],E,R[122],20,[[["self"]],[R[8]]]],[10,R[123],E,R[124],20,[[["self"]],[R[3]]]],[11,"parse",E,"Parses a `RawFrame` from the bytes starting at the…",21,[[],[[R[32]],[R[54],[R[32]]]]]],[11,"len",E,"Returns the total length of the `RawFrame`, including both…",21,[[["self"]],["usize"]]],[11,R[33],E,"Returns a `Vec` of bytes representing the serialized…",21,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[57],E,"Returns a `FrameHeader` instance corresponding to the…",21,[[["self"]],[R[3]]]],[11,"payload",E,"Returns a slice representing the payload of the `RawFrame`.",21,[[["self"]]]],[0,"transport",R[34],"The module contains implementations of the transport layer…",N,N],[3,R[157],R[110],"The struct is a an implementation of the `ReceiveFrame`…",N,N],[8,R[156],E,"A trait that any struct that wants to provide the…",N,N],[11,"read_exact",E,"A convenience method that performs as many `read` calls on…",22,[[["self"]],[R[5]]]],[10,"try_split",E,"Attempts to split the `TransportStream` instance into a…",22,[[["self"]],[["error"],[R[5],["error"]]]]],[10,"close",E,"Attempts to shutdown both ends of the transport stream.",22,[[["self"]],[[R[5],["error"]],["error"]]]],[11,"new",E,"Create a new `TransportReceiveFrame` that will use the…",23,[[["ts"]],["transportreceiveframe"]]],[0,"connection",R[34],"The module contains the implementation of an HTTP/2…",N,N],[3,R[158],R[111],"The struct implements the HTTP/2 connection level logic.",N,N],[12,"scheme",E,"The scheme of the connection",24,N],[3,R[35],E,"The struct represents a chunk of data that should be sent…",N,N],[12,"data",E,"The data that should be sent.",25,N],[12,R[0],E,"The ID of the stream on which the data should be sent.",25,N],[12,"end_stream",E,"Whether the data chunk will also end the stream.",25,N],[3,R[163],E,"The struct represents an `HttpConnection` that has been…",N,N],[4,R[159],E,"An enum representing all frame variants that can be…",N,N],[13,R[36],E,E,26,N],[13,R[37],E,E,26,N],[13,R[38],E,E,26,N],[13,R[39],E,E,26,N],[13,R[40],E,E,26,N],[13,R[41],E,E,26,N],[13,R[42],E,E,26,N],[13,"UnknownFrame",E,E,26,N],[4,R[160],E,"The enum represents the success status of the operation of…",N,N],[13,"Sent",E,"Indicates that a DATA frame was successfully sent",27,N],[13,"Nothing",E,"Indicates that nothing was sent, but that no errors…",27,N],[4,R[10],E,"An enum indicating whether the `HttpConnection` send…",N,N],[13,"Yes",E,"The stream should be closed",28,N],[13,"No",E,"The stream should still be kept open",28,N],[8,R[161],E,R[43],N,N],[10,"send_frame",E,"Queue the given frame for immediate sending to the peer.…",29,[[["self"],["frameir"]],[R[44]]]],[8,R[162],E,R[43],N,N],[10,R[127],E,"Return a new `HttpFrame` instance. Unknown frames can be…",30,[[["self"]],[[R[44],[R[45]]],[R[45]]]]],[11,R[46],E,E,26,[[[R[32]]],[[R[44],[R[45]]],[R[45]]]]],[11,"new",E,"Creates a new `DataChunk`.",25,[[[R[47]],["cow"],[R[8]]],[R[7]]]],[11,"new_borrowed",E,"Creates a new `DataChunk` from a borrowed slice. This…",25,[[[R[47]],["borrow"],[R[8]]],[R[7]]]],[11,R[48],E,"Send a RST_STREAM frame for the given frame id",31,[[["self"],[R[20]],[R[8]]],[R[44]]]],[11,"send_settings_ack",E,"Sends a SETTINGS acknowledge frame to the peer.",31,[[["self"]],[R[44]]]],[11,"send_ping_ack",E,"Sends a PING ack",31,[[["self"],["u64"]],[R[44]]]],[11,R[73],E,"Sends a PING request",31,[[["self"],["u64"]],[R[44]]]],[11,"send_headers",E,"A helper function that inserts the frames required to send…",31,[[["self"],["vec",[R[57]]],[R[47]],["into",["vec"]],[R[8]]],[R[44]]]],[11,"send_data",E,"A helper function that inserts a frame representing the…",31,[[["self"],[R[7]]],[R[44]]]],[11,R[75],E,"Sends the chunk of data provided by the given…",31,[[["self"],["p"]],[[R[44],[R[49]]],[R[49]]]]],[11,"new",E,"Creates a new `HttpConnection` that will use the given…",24,[[[R[71]]],[R[52]]]],[11,R[81],E,"Creates a new `HttpConnectionSender` instance that will…",24,[[["self"],["s"]],[["sendframe"],["httpconnectionsender"]]]],[11,"in_window_size",E,"Returns the current size of the inbound flow control…",24,[[["self"]],["i32"]]],[11,"out_window_size",E,"Returns the current size of the outbound flow control…",24,[[["self"]],["i32"]]],[11,R[72],E,"The method processes the next frame provided by the given…",24,[[["self"],["recv"],["sess"]],[R[44]]]],[11,R[74],E,"Handles the next frame incoming on the given…",24,[[["self"],["recv"],["sess"]],[R[44]]]],[0,"session",R[34],"Defines the interface for the session-level management of…",N,N],[3,R[189],R[112],"A newtype for an iterator over `Stream`s saved in a…",N,N],[3,"Client",E,R[50],N,N],[3,"Server",E,R[50],N,N],[3,R[169],E,"An implementation of the `SessionState` trait that tracks…",N,N],[3,R[164],E,"An implementation of the `Stream` trait that saves all…",N,N],[12,R[0],E,"The ID of the stream, if already assigned by the connection.",32,N],[12,R[1],E,"The headers associated with the stream (i.e. the response…",32,N],[12,"body",E,"The body of the stream (i.e. the response body)",32,N],[12,"state",E,"The current stream state.",32,N],[4,R[165],E,"The enum represents all the states that an HTTP/2 stream…",N,N],[13,"Idle",E,E,33,N],[13,"ReservedLocal",E,E,33,N],[13,"ReservedRemote",E,E,33,N],[13,"Open",E,E,33,N],[13,"HalfClosedRemote",E,E,33,N],[13,"HalfClosedLocal",E,E,33,N],[13,"Closed",E,E,33,N],[4,R[166],E,"The enum represents errors that can be returned from the…",N,N],[13,"Closed",E,"Indicates that the stream cannot provide any data, since…",34,N],[13,"Other",E,"A different error while trying to obtain the data chunk.…",34,N],[4,R[167],E,"The enum represents the successful completion of the…",N,N],[13,"Chunk",E,"A data chunk of the given size, after which more chunks…",35,N],[13,"Last",E,"The chunk was the last one that the stream will ever write.",35,N],[13,"Unavailable",E,"No data currently available, but the stream isn't closed yet",35,N],[5,"default_client_state",E,"Create a new `DefaultSessionState` for a client session.…",N,[[],[[R[51],[R[63]]],["stream"],[R[63]]]]],[5,"default_server_state",E,"Create a new `DefaultSessionState` for a server session.…",N,[[],[[R[51],[R[76]]],["stream"],[R[76]]]]],[8,"Session",E,"A trait that defines the interface between an…",N,N],[10,R[56],E,"Notifies the `Session` that a new data chunk has arrived…",36,[[["self"],[R[52]],[R[8]]],[R[44]]]],[10,R[128],E,"Notifies the `Session` that headers have arrived for a…",36,[[["self"],["vec",[R[57]]],[R[57]],[R[52]],[R[8]]],[R[44]]]],[10,R[129],E,"Notifies the `Session` that a particular stream got closed…",36,[[["self"],[R[52]],[R[8]]],[R[44]]]],[10,R[48],E,"Notifies the `Session` that a particular stream was reset…",36,[[["self"],[R[20]],[R[52]],[R[8]]],[R[44]]]],[10,R[130],E,"Notifies the `Session` that the peer has sent a new set of…",36,[[["self"],[R[22]],[R[52]],["vec",[R[22]]]],[R[44]]]],[10,"on_ping",E,"Notifies the `Session` that a PING request has been…",36,[[["self"],[R[53]],[R[52]]],[R[44]]]],[10,"on_pong",E,"Notifies the `Session` that a PING acknowledgement has…",36,[[["self"],[R[53]],[R[52]]],[R[44]]]],[11,"on_goaway",E,"Notifies the `Session` that the peer has sent a GOAWAY…",36,[[["self"],[R[54]],[R[20]],[R[52]],[R[8]]],[R[44]]]],[8,R[168],E,"A trait defining a set of methods for accessing and…",N,N],[16,"Stream",E,"The type of the `Stream` that the `SessionState` manages.",37,N],[10,R[131],E,R[55],37,[[["self"]],[R[8]]]],[10,R[132],E,R[55],37,[[["self"],[R[8]]],[R[5]]]],[10,R[133],E,"Returns a reference to a `Stream` with the given…",37,[[["self"],[R[8]]],[R[54]]]],[10,R[134],E,"Returns a mutable reference to a `Stream` with the given…",37,[[["self"],[R[8]]],[R[54]]]],[10,R[135],E,"Removes the stream with the given `StreamId` from the…",37,[[["self"],[R[8]]],[R[54]]]],[10,"iter",E,"Returns an iterator over the streams currently found in…",37,[[["self"]],[R[136]]]],[10,"len",E,"The number of streams tracked by this state object",37,[[["self"]],["usize"]]],[11,"get_closed",E,"Returns all streams that are closed and tracked by the…",37,[[["self"]],["vec"]]],[8,"Stream",E,"A trait representing a single HTTP/2 stream. An HTTP/2…",N,N],[10,R[56],E,"Handle a new data chunk that has arrived for the stream.",38,[[["self"]]]],[10,R[137],E,"Set headers for a stream. A stream is only allowed to have…",38,[[["self"],["vec",[R[57]]],[R[57]]]]],[10,R[138],E,"Sets the stream state to the newly provided state.",38,[[["self"],[R[60]]]]],[11,"on_rst_stream",E,"Invoked when the session detects that the peer has reset…",38,[[["self"],[R[20]]]]],[10,R[139],E,"Places the next data chunk that should be written onto the…",38,[[["self"]],[[R[58]],[R[5],[R[59],R[58]]],[R[59]]]]],[10,"state",E,"Returns the current state of the stream.",38,[[["self"]],[R[60]]]],[11,"close",E,"Transitions the stream state to closed. After this, the…",38,[[["self"]]]],[11,"close_local",E,R[61],38,[[["self"]]]],[11,"close_remote",E,R[61],38,[[["self"]]]],[11,"is_closed",E,"Returns whether the stream is closed.",38,[[["self"]],["bool"]]],[11,"is_closed_local",E,"Returns whether the stream is closed locally.",38,[[["self"]],["bool"]]],[11,"is_closed_remote",E,"Returns whether the remote peer has closed the stream.…",38,[[["self"]],["bool"]]],[11,"new",E,"Creates a new `DefaultSessionState` for a client session…",39,[[],[[R[51],[R[63]]],[R[63]]]]],[11,"new",E,"Creates a new `DefaultSessionState` for a server session…",39,[[],[[R[51],[R[76]]],[R[76]]]]],[11,"new",E,"Create a new `DefaultStream`, where the ID is not yet…",32,[[],[R[62]]]],[11,"with_id",E,"Create a new `DefaultStream` with the given ID.",32,[[[R[8]]],[R[62]]]],[11,"set_full_data",E,"Sets the outgoing data of the stream to the given `Vec`.",32,[[["self"],["vec",["u8"]],["u8"]]]],[0,"priority",R[34],"The module exposes an API for defining data prioritization…",N,N],[3,R[171],R[113],"An implementation of the `DataPrioritizer` trait that is…",N,N],[8,R[170],E,"A trait that types that want to provide data to an HTTP/2…",N,N],[10,R[140],E,"Returns the next `DataChunk` that should be sent on the…",40,[[["self"]],[[R[44],[R[54]]],[R[54],[R[7]]]]]],[11,"new",E,"Creates a new `SimplePrioritizer` that will use the given…",41,[[["state"]],["simpleprioritizer"]]],[0,R[63],R[34],R[77],N,N],[3,R[172],R[67],"A convenience wrapper type that represents an established…",N,N],[12,"0",E,E,42,N],[12,"1",E,E,42,N],[12,"2",E,E,42,N],[3,R[173],E,"A struct that establishes a cleartext TCP connection that…",N,N],[12,"host",E,"The host to which the connection should be established",43,N],[12,"port",E,"The port on which the connection should be established",43,N],[3,R[190],E,"A newtype wrapping the `io::Error`, as it occurs when…",N,N],[3,R[174],E,"A struct representing a request stream. It provides the…",N,N],[12,R[1],E,"The list of headers that will be sent with the request.",44,N],[12,"stream",E,"The underlying `Stream` instance, which will handle the…",44,N],[3,R[175],E,"The struct extends the `HttpConnection` API with…",N,N],[12,"state",E,R[78],45,N],[3,R[179],E,"An implementation of the `Session` trait specific to…",N,N],[5,"write_preface",E,"Writes the client preface to the given `io::Write` instance.",N,[[["w"]],[[R[5],["error"]],["error"]]]],[0,"tls",E,"The module contains helpers for implementing TLS-based…",N,N],[3,R[176],R[114],"A struct implementing the functionality of establishing a…",N,N],[12,"host",E,E,46,N],[4,R[177],E,"An enum representing possible errors that can arise when…",N,N],[13,"IoError",E,"The variant corresponds to the underlying raw TCP…",47,N],[13,"SslError",E,"The variant corresponds to the TLS negotiation returning…",47,N],[13,"Http2NotSupported",E,"The variant corresponds to the case when the TLS…",47,N],[11,"new",E,"Creates a new `TlsConnector` that will create a new…",46,[[["p"],["str"]],[R[64]]]],[11,"with_context",E,"Creates a new `TlsConnector` that will use the provided…",46,[[[R[65]],["str"]],[R[64]]]],[11,"build_default_context",E,"Builds up a default `SslContext` instance wth TLS settings…",46,[[["path"]],[[R[5],[R[65],R[66]]],[R[65]],[R[66]]]]],[8,"HttpConnectError",R[67],"A marker trait for errors raised by attempting to…",N,N],[8,R[178],E,"A trait that can be implemented by structs that want to…",N,N],[16,"Stream",E,"The type of the underlying transport stream that the…",48,N],[16,"Err",E,"The type of the error that can be produced by trying to…",48,N],[10,"connect",E,"Establishes a network connection that can be used by…",48,[[],[[R[5],[R[68]]],[R[68]]]]],[11,"new",E,R[69],43,[[["str"]],[R[70]]]],[11,"with_port",E,R[69],43,[[["u16"],["str"]],[R[70]]]],[11,R[79],E,"Creates a new `ClientConnection` that will use the given…",45,[[["state"],[R[52]]],["clientconnection"]]],[11,"scheme",E,R[80],45,[[["self"]],[R[71]]]],[11,R[72],E,"Handles the next frame provided by the given frame…",45,[[["self"],["recv"],[R[81]]],[R[44]]]],[11,"start_request",E,"Starts a new request based on the given `RequestStream`.",45,[[["self"],["requeststream"],["s"]],[[R[44],[R[8]]],[R[8]]]]],[11,R[73],E,"Send a PING",45,[[["self"],["s"]],[R[44]]]],[11,R[74],E,"Fully handles the next incoming frame provided by the…",45,[[["self"],["recv"],[R[81]]],[R[44]]]],[11,R[75],E,R[82],45,[[["self"],["s"]],[[R[44],[R[49]]],[R[49]]]]],[11,"new",E,"Returns a new `ClientSession` associated to the given state.",49,[[["s"],["state"]],["clientsession"]]],[0,R[76],R[34],R[77],N,N],[3,R[182],R[115],"An implementation of the `Session` trait for a server-side…",N,N],[3,R[180],E,"The struct provides a more convenient API for…",N,N],[12,"state",E,R[78],50,N],[8,R[181],E,"The `ServerSession` requires an instance of a type that…",N,N],[16,"Stream",E,E,51,N],[10,"create",E,"Create a new `Stream` with the given ID.",51,[[["self"],[R[8]]]]],[11,"new",E,E,52,[[["f"],["s"],["state"]],["serversession"]]],[11,R[79],E,"Creates a new `ServerConnection` that will use the given…",50,[[["state"],["f"],[R[52]]],["serverconnection"]]],[11,"scheme",E,R[80],50,[[["self"]],[R[71]]]],[11,"send_settings",E,"Send the current settings associated to the…",50,[[["self"],["s"]],[R[44]]]],[11,R[72],E,"Handles the next frame on the given `ReceiveFrame`…",50,[[["self"],["recv"],[R[81]]],[R[44]]]],[11,R[74],E,"Fully handles the next frame provided by the given…",50,[[["self"],["recv"],[R[81]]],[R[44]]]],[11,"start_response",E,"Starts a response on the stream with the given ID by…",50,[[["self"],["vec",[R[57]]],[R[57]],[R[47]],["s"],[R[8]]],[R[44]]]],[11,R[75],E,R[82],50,[[["self"],["s"]],[[R[44],[R[49]]],[R[49]]]]],[6,"StreamId",R[34],"An alias for the type that represents the ID of an HTTP/2…",N,N],[6,R[191],E,"An alias for the type that represents an HTTP/2 header…",N,N],[6,"StaticHeader",E,"A type alias for a `Header` where both the name, as well…",N,N],[6,"HttpResult",E,"A convenience `Result` type that has the `HttpError` type…",N,N],[6,"StaticResponse",E,"A type alias for a `Response` where all headers' names and…",N,N],[17,"INITIAL_CONNECTION_WINDOW_SIZE",E,"The initial size of the connections' flow control window.",N,N],[17,"ALPN_PROTOCOLS",E,"A set of protocol names that the library should use to…",N,N],[11,"new",E,"Creates a new `Header` with the given name and value.",53,[[[R[83]],["into",[R[83]]],["into",[R[83]]],[R[83]]],[R[57]]]],[11,"name",E,"Return a borrowed representation of the `Header` name.",53,[[["self"]]]],[11,"value",E,"Return a borrowed representation of the `Header` value.",53,[[["self"]]]],[11,"new",E,"Creates a new `ConnectionError` with no associated debug…",54,[[[R[20]]],[R[85]]]],[11,R[84],E,"Creates a new `ConnectionError` with the given associated…",54,[[["vec",["u8"]],[R[20]],["u8"]],[R[85]]]],[11,R[24],E,"The error code of the underlying error.",54,[[["self"]],[R[20]]]],[11,R[86],E,"The debug data attached to the connection error, if any.",54,[[["self"]],[R[54]]]],[11,"debug_str",E,"The debug data interpreted as a string, if possible.",54,[[["self"]],[[R[54],["str"]],["str"]]]],[11,"try_increase",E,"Tries to increase the window size by the given delta. If…",55,[[["self"],["u32"]],[R[5]]]],[11,"try_decrease",E,"Tries to decrease the size of the window by the given delta.",55,[[["self"],["i32"]],[R[5]]]],[11,"new",E,"Creates a new `WindowSize` with the given initial size.",55,[[["i32"]],[R[144]]]],[11,"size",E,"Returns the current size of the window.",55,[[["self"]],["i32"]]],[11,"as_bytes",E,"Returns a byte string representing the scheme.",4,[[["self"]]]],[11,"new",E,"Creates a new `Response` with all the components already…",0,[[["u8"],["vec",[R[87]]],["vec",["u8"]],[R[87]],[R[8]]],[R[89]]]],[11,"status_code",E,"Gets the response status code from the pseudo-header. If…",0,[[["self"]],[["u16"],[R[44],["u16"]]]]],[0,R[63],R[94],"The module contains implementations of HTTP/2 clients that…",N,N],[3,R[185],R[116],"A struct implementing a simple HTTP/2 client.",N,N],[3,"Client",E,"A struct representing an HTTP/2 client that receives…",N,N],[11,"with_stream",E,"Creates a new `SimpleClient` instance that will use the…",56,[[["string"],["s"],[R[71]]],[[R[44],[R[88]]],[R[88]]]]],[11,R[90],E,"A convenience constructor that first tries to establish an…",56,[[["c"]],[[R[44],[R[88]]],[R[88]]]]],[11,"request",E,"Send a request to the server. Blocks until the entire…",56,[[["self"],["vec",["u8"]],[R[54],["vec"]]],[[R[44],[R[8]]],[R[8]]]]],[11,"get_response",E,"Gets the response for the stream with the given ID. If a…",56,[[["self"],[R[8]]],[[R[89]],[R[44],[R[89]]]]]],[11,"get",E,"Performs a GET request on the given path. This is a…",56,[[["self"]],[[R[89]],[R[44],[R[89]]]]]],[11,"post",E,"Performs a POST request on the given path.",56,[[["self"],["vec",["u8"]],["u8"]],[[R[89]],[R[44],[R[89]]]]]],[11,R[90],E,"Creates a brand new HTTP/2 client. This means that a new…",57,[[["c"]],[[R[91]],[R[63]],[R[5],[R[63],R[91]]]]]],[11,"request",E,"Issues a new request to the server.",57,[[["self"],["vec",["u8"]],[R[54],["vec"]]],[[R[54],[R[92]]],[R[92],[R[93]]]]]],[11,"get",E,"Issues a GET request to the server.",57,[[["self"]],[[R[54],[R[92]]],[R[92],[R[93]]]]]],[11,"post",E,"Issues a POST request to the server.",57,[[["self"],["vec",["u8"]],["u8"]],[[R[54],[R[92]]],[R[92],[R[93]]]]]],[11,"ping",E,"Sends a PING to the server",57,[[["self"]],[[R[5],["str"]],["str"]]]],[0,R[76],R[94],"The module contains a simple HTTP/2 server implementation.",N,N],[3,R[186],R[117],"The struct represents a fully received request.",N,N],[12,R[0],E,E,58,N],[12,R[1],E,E,58,N],[12,"body",E,E,58,N],[3,R[187],E,"The struct implements a simple HTTP/2 server that allows…",N,N],[11,"new",E,"Creates a new `SimpleServer` that will use the given…",59,[[["ts"],["h"]],[[R[95]],[R[44],[R[95]]]]]],[11,"handle_next",E,"Handles the next incoming frame, blocking to receive it if…",59,[[["self"]],[R[44]]]],[11,"from",R[34],E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[96],E,E,60,[[[U]],[R[5]]]],[11,R[97],E,E,60,[[],[R[5]]]],[11,R[98],E,E,60,[[["self"]],[T]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[101],E,E,60,[[["self"]],["typeid"]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[99],E,E,53,[[["self"]],[T]]],[11,R[100],E,E,53,[[["self"],[T]]]],[11,"into",E,E,53,[[],[U]]],[11,R[96],E,E,53,[[[U]],[R[5]]]],[11,R[97],E,E,53,[[],[R[5]]]],[11,R[98],E,E,53,[[["self"]],[T]]],[11,"borrow",E,E,53,[[["self"]],[T]]],[11,R[101],E,E,53,[[["self"]],["typeid"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[102],E,E,54,[[["self"]],["string"]]],[11,R[99],E,E,54,[[["self"]],[T]]],[11,R[100],E,E,54,[[["self"],[T]]]],[11,"into",E,E,54,[[],[U]]],[11,R[96],E,E,54,[[[U]],[R[5]]]],[11,R[97],E,E,54,[[],[R[5]]]],[11,R[98],E,E,54,[[["self"]],[T]]],[11,"borrow",E,E,54,[[["self"]],[T]]],[11,R[101],E,E,54,[[["self"]],["typeid"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[99],E,E,55,[[["self"]],[T]]],[11,R[100],E,E,55,[[["self"],[T]]]],[11,"into",E,E,55,[[],[U]]],[11,R[96],E,E,55,[[[U]],[R[5]]]],[11,R[97],E,E,55,[[],[R[5]]]],[11,R[98],E,E,55,[[["self"]],[T]]],[11,"borrow",E,E,55,[[["self"]],[T]]],[11,R[101],E,E,55,[[["self"]],["typeid"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[99],E,E,0,[[["self"]],[T]]],[11,R[100],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,R[96],E,E,0,[[[U]],[R[5]]]],[11,R[97],E,E,0,[[],[R[5]]]],[11,R[98],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[101],E,E,0,[[["self"]],["typeid"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[99],E,E,1,[[["self"]],[T]]],[11,R[100],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,R[96],E,E,1,[[[U]],[R[5]]]],[11,R[97],E,E,1,[[],[R[5]]]],[11,R[98],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[101],E,E,1,[[["self"]],["typeid"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[99],E,E,2,[[["self"]],[T]]],[11,R[100],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,R[96],E,E,2,[[[U]],[R[5]]]],[11,R[97],E,E,2,[[],[R[5]]]],[11,R[98],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[101],E,E,2,[[["self"]],["typeid"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[102],E,E,3,[[["self"]],["string"]]],[11,"into",E,E,3,[[],[U]]],[11,R[96],E,E,3,[[[U]],[R[5]]]],[11,R[97],E,E,3,[[],[R[5]]]],[11,R[98],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[101],E,E,3,[[["self"]],["typeid"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[99],E,E,4,[[["self"]],[T]]],[11,R[100],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,R[96],E,E,4,[[[U]],[R[5]]]],[11,R[97],E,E,4,[[],[R[5]]]],[11,R[98],E,E,4,[[["self"]],[T]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[101],E,E,4,[[["self"]],["typeid"]]],[11,"from",R[6],E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[96],E,E,61,[[[U]],[R[5]]]],[11,R[97],E,E,61,[[],[R[5]]]],[11,R[98],E,E,61,[[["self"]],[T]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[101],E,E,61,[[["self"]],["typeid"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[99],E,E,21,[[["self"]],[T]]],[11,R[100],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,R[96],E,E,21,[[[U]],[R[5]]]],[11,R[97],E,E,21,[[],[R[5]]]],[11,R[98],E,E,21,[[["self"]],[T]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[101],E,E,21,[[["self"]],["typeid"]]],[11,"from",R[103],E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[96],E,E,62,[[[U]],[R[5]]]],[11,R[97],E,E,62,[[],[R[5]]]],[11,R[98],E,E,62,[[["self"]],[T]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[101],E,E,62,[[["self"]],["typeid"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[99],E,E,6,[[["self"]],[T]]],[11,R[100],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,R[96],E,E,6,[[[U]],[R[5]]]],[11,R[97],E,E,6,[[],[R[5]]]],[11,R[98],E,E,6,[[["self"]],[T]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[101],E,E,6,[[["self"]],["typeid"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[99],E,E,7,[[["self"]],[T]]],[11,R[100],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,R[96],E,E,7,[[[U]],[R[5]]]],[11,R[97],E,E,7,[[],[R[5]]]],[11,R[98],E,E,7,[[["self"]],[T]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[101],E,E,7,[[["self"]],["typeid"]]],[11,"from",R[104],E,8,[[[T]],[T]]],[11,R[99],E,E,8,[[["self"]],[T]]],[11,R[100],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,R[96],E,E,8,[[[U]],[R[5]]]],[11,R[97],E,E,8,[[],[R[5]]]],[11,R[98],E,E,8,[[["self"]],[T]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[101],E,E,8,[[["self"]],["typeid"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[99],E,E,9,[[["self"]],[T]]],[11,R[100],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,R[96],E,E,9,[[[U]],[R[5]]]],[11,R[97],E,E,9,[[],[R[5]]]],[11,R[98],E,E,9,[[["self"]],[T]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[101],E,E,9,[[["self"]],["typeid"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[99],E,E,10,[[["self"]],[T]]],[11,R[100],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,R[96],E,E,10,[[[U]],[R[5]]]],[11,R[97],E,E,10,[[],[R[5]]]],[11,R[98],E,E,10,[[["self"]],[T]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[101],E,E,10,[[["self"]],["typeid"]]],[11,"from",R[105],E,11,[[[T]],[T]]],[11,R[99],E,E,11,[[["self"]],[T]]],[11,R[100],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,R[96],E,E,11,[[[U]],[R[5]]]],[11,R[97],E,E,11,[[],[R[5]]]],[11,R[98],E,E,11,[[["self"]],[T]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[101],E,E,11,[[["self"]],["typeid"]]],[11,"from",R[106],E,12,[[[T]],[T]]],[11,R[99],E,E,12,[[["self"]],[T]]],[11,R[100],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,R[96],E,E,12,[[[U]],[R[5]]]],[11,R[97],E,E,12,[[],[R[5]]]],[11,R[98],E,E,12,[[["self"]],[T]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[101],E,E,12,[[["self"]],["typeid"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[99],E,E,13,[[["self"]],[T]]],[11,R[100],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,R[96],E,E,13,[[[U]],[R[5]]]],[11,R[97],E,E,13,[[],[R[5]]]],[11,R[98],E,E,13,[[["self"]],[T]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[101],E,E,13,[[["self"]],["typeid"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[99],E,E,14,[[["self"]],[T]]],[11,R[100],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,R[96],E,E,14,[[[U]],[R[5]]]],[11,R[97],E,E,14,[[],[R[5]]]],[11,R[98],E,E,14,[[["self"]],[T]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[101],E,E,14,[[["self"]],["typeid"]]],[11,"from",R[107],E,15,[[[T]],[T]]],[11,R[99],E,E,15,[[["self"]],[T]]],[11,R[100],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,R[96],E,E,15,[[[U]],[R[5]]]],[11,R[97],E,E,15,[[],[R[5]]]],[11,R[98],E,E,15,[[["self"]],[T]]],[11,"borrow",E,E,15,[[["self"]],[T]]],[11,R[101],E,E,15,[[["self"]],["typeid"]]],[11,"from",R[108],E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[96],E,E,63,[[[U]],[R[5]]]],[11,R[97],E,E,63,[[],[R[5]]]],[11,R[98],E,E,63,[[["self"]],[T]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[101],E,E,63,[[["self"]],["typeid"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[99],E,E,16,[[["self"]],[T]]],[11,R[100],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,R[96],E,E,16,[[[U]],[R[5]]]],[11,R[97],E,E,16,[[],[R[5]]]],[11,R[98],E,E,16,[[["self"]],[T]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[101],E,E,16,[[["self"]],["typeid"]]],[11,"from",R[109],E,17,[[[T]],[T]]],[11,R[99],E,E,17,[[["self"]],[T]]],[11,R[100],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,R[96],E,E,17,[[[U]],[R[5]]]],[11,R[97],E,E,17,[[],[R[5]]]],[11,R[98],E,E,17,[[["self"]],[T]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[101],E,E,17,[[["self"]],["typeid"]]],[11,"from",R[110],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[96],E,E,23,[[[U]],[R[5]]]],[11,R[97],E,E,23,[[],[R[5]]]],[11,R[98],E,E,23,[[["self"]],[T]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[101],E,E,23,[[["self"]],["typeid"]]],[11,"from",R[111],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[96],E,E,24,[[[U]],[R[5]]]],[11,R[97],E,E,24,[[],[R[5]]]],[11,R[98],E,E,24,[[["self"]],[T]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[101],E,E,24,[[["self"]],["typeid"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[96],E,E,25,[[[U]],[R[5]]]],[11,R[97],E,E,25,[[],[R[5]]]],[11,R[98],E,E,25,[[["self"]],[T]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[101],E,E,25,[[["self"]],["typeid"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[96],E,E,31,[[[U]],[R[5]]]],[11,R[97],E,E,31,[[],[R[5]]]],[11,R[98],E,E,31,[[["self"]],[T]]],[11,"borrow",E,E,31,[[["self"]],[T]]],[11,R[101],E,E,31,[[["self"]],["typeid"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[99],E,E,26,[[["self"]],[T]]],[11,R[100],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,R[96],E,E,26,[[[U]],[R[5]]]],[11,R[97],E,E,26,[[],[R[5]]]],[11,R[98],E,E,26,[[["self"]],[T]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[101],E,E,26,[[["self"]],["typeid"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[99],E,E,27,[[["self"]],[T]]],[11,R[100],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,R[96],E,E,27,[[[U]],[R[5]]]],[11,R[97],E,E,27,[[],[R[5]]]],[11,R[98],E,E,27,[[["self"]],[T]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[101],E,E,27,[[["self"]],["typeid"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[99],E,E,28,[[["self"]],[T]]],[11,R[100],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,R[96],E,E,28,[[[U]],[R[5]]]],[11,R[97],E,E,28,[[],[R[5]]]],[11,R[98],E,E,28,[[["self"]],[T]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[101],E,E,28,[[["self"]],["typeid"]]],[11,"from",R[112],E,64,[[[T]],[T]]],[11,"into_iter",E,E,64,[[],["i"]]],[11,"into",E,E,64,[[],[U]]],[11,R[96],E,E,64,[[[U]],[R[5]]]],[11,R[97],E,E,64,[[],[R[5]]]],[11,R[98],E,E,64,[[["self"]],[T]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[101],E,E,64,[[["self"]],["typeid"]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[96],E,E,65,[[[U]],[R[5]]]],[11,R[97],E,E,65,[[],[R[5]]]],[11,R[98],E,E,65,[[["self"]],[T]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[101],E,E,65,[[["self"]],["typeid"]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[96],E,E,66,[[[U]],[R[5]]]],[11,R[97],E,E,66,[[],[R[5]]]],[11,R[98],E,E,66,[[["self"]],[T]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[101],E,E,66,[[["self"]],["typeid"]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[96],E,E,39,[[[U]],[R[5]]]],[11,R[97],E,E,39,[[],[R[5]]]],[11,R[98],E,E,39,[[["self"]],[T]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[101],E,E,39,[[["self"]],["typeid"]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[99],E,E,32,[[["self"]],[T]]],[11,R[100],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,R[96],E,E,32,[[[U]],[R[5]]]],[11,R[97],E,E,32,[[],[R[5]]]],[11,R[98],E,E,32,[[["self"]],[T]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[101],E,E,32,[[["self"]],["typeid"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[99],E,E,33,[[["self"]],[T]]],[11,R[100],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,R[96],E,E,33,[[[U]],[R[5]]]],[11,R[97],E,E,33,[[],[R[5]]]],[11,R[98],E,E,33,[[["self"]],[T]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[101],E,E,33,[[["self"]],["typeid"]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[96],E,E,34,[[[U]],[R[5]]]],[11,R[97],E,E,34,[[],[R[5]]]],[11,R[98],E,E,34,[[["self"]],[T]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[101],E,E,34,[[["self"]],["typeid"]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[99],E,E,35,[[["self"]],[T]]],[11,R[100],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,R[96],E,E,35,[[[U]],[R[5]]]],[11,R[97],E,E,35,[[],[R[5]]]],[11,R[98],E,E,35,[[["self"]],[T]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[101],E,E,35,[[["self"]],["typeid"]]],[11,"from",R[113],E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[96],E,E,41,[[[U]],[R[5]]]],[11,R[97],E,E,41,[[],[R[5]]]],[11,R[98],E,E,41,[[["self"]],[T]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[101],E,E,41,[[["self"]],["typeid"]]],[11,"from",R[67],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[96],E,E,42,[[[U]],[R[5]]]],[11,R[97],E,E,42,[[],[R[5]]]],[11,R[98],E,E,42,[[["self"]],[T]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[101],E,E,42,[[["self"]],["typeid"]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[96],E,E,43,[[[U]],[R[5]]]],[11,R[97],E,E,43,[[],[R[5]]]],[11,R[98],E,E,43,[[["self"]],[T]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[101],E,E,43,[[["self"]],["typeid"]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[102],E,E,67,[[["self"]],["string"]]],[11,"into",E,E,67,[[],[U]]],[11,R[96],E,E,67,[[[U]],[R[5]]]],[11,R[97],E,E,67,[[],[R[5]]]],[11,R[98],E,E,67,[[["self"]],[T]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[101],E,E,67,[[["self"]],["typeid"]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[96],E,E,44,[[[U]],[R[5]]]],[11,R[97],E,E,44,[[],[R[5]]]],[11,R[98],E,E,44,[[["self"]],[T]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[101],E,E,44,[[["self"]],["typeid"]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[96],E,E,45,[[[U]],[R[5]]]],[11,R[97],E,E,45,[[],[R[5]]]],[11,R[98],E,E,45,[[["self"]],[T]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[101],E,E,45,[[["self"]],["typeid"]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[96],E,E,49,[[[U]],[R[5]]]],[11,R[97],E,E,49,[[],[R[5]]]],[11,R[98],E,E,49,[[["self"]],[T]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[101],E,E,49,[[["self"]],["typeid"]]],[11,"from",R[114],E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[96],E,E,46,[[[U]],[R[5]]]],[11,R[97],E,E,46,[[],[R[5]]]],[11,R[98],E,E,46,[[["self"]],[T]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[101],E,E,46,[[["self"]],["typeid"]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[102],E,E,47,[[["self"]],["string"]]],[11,"into",E,E,47,[[],[U]]],[11,R[96],E,E,47,[[[U]],[R[5]]]],[11,R[97],E,E,47,[[],[R[5]]]],[11,R[98],E,E,47,[[["self"]],[T]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[101],E,E,47,[[["self"]],["typeid"]]],[11,"from",R[115],E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[96],E,E,52,[[[U]],[R[5]]]],[11,R[97],E,E,52,[[],[R[5]]]],[11,R[98],E,E,52,[[["self"]],[T]]],[11,"borrow",E,E,52,[[["self"]],[T]]],[11,R[101],E,E,52,[[["self"]],["typeid"]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[96],E,E,50,[[[U]],[R[5]]]],[11,R[97],E,E,50,[[],[R[5]]]],[11,R[98],E,E,50,[[["self"]],[T]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[101],E,E,50,[[["self"]],["typeid"]]],[11,"from",R[116],E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[96],E,E,56,[[[U]],[R[5]]]],[11,R[97],E,E,56,[[],[R[5]]]],[11,R[98],E,E,56,[[["self"]],[T]]],[11,"borrow",E,E,56,[[["self"]],[T]]],[11,R[101],E,E,56,[[["self"]],["typeid"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[99],E,E,57,[[["self"]],[T]]],[11,R[100],E,E,57,[[["self"],[T]]]],[11,"into",E,E,57,[[],[U]]],[11,R[96],E,E,57,[[[U]],[R[5]]]],[11,R[97],E,E,57,[[],[R[5]]]],[11,R[98],E,E,57,[[["self"]],[T]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[101],E,E,57,[[["self"]],["typeid"]]],[11,"from",R[117],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[96],E,E,58,[[[U]],[R[5]]]],[11,R[97],E,E,58,[[],[R[5]]]],[11,R[98],E,E,58,[[["self"]],[T]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[101],E,E,58,[[["self"]],["typeid"]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[96],E,E,59,[[[U]],[R[5]]]],[11,R[97],E,E,59,[[],[R[5]]]],[11,R[98],E,E,59,[[["self"]],[T]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[101],E,E,59,[[["self"]],["typeid"]]],[11,R[118],R[103],E,6,[[["b"]],[R[5]]]],[11,R[118],R[104],E,9,[[["b"]],[R[5]]]],[11,R[118],R[105],E,11,[[["b"]],[R[5]]]],[11,R[118],R[106],E,12,[[["b"]],[R[5]]]],[11,R[118],R[107],E,15,[[["b"]],[R[5]]]],[11,R[118],R[108],E,16,[[["b"]],[R[5]]]],[11,R[118],R[109],E,17,[[["b"]],[R[5]]]],[11,R[118],R[6],E,21,[[["b"]],[R[5]]]],[11,R[119],R[103],E,7,[[["self"]],["u8"]]],[11,R[119],R[104],E,10,[[["self"]],["u8"]]],[11,R[119],R[106],E,14,[[["self"]],["u8"]]],[11,R[119],R[108],E,63,[[["self"]],["u8"]]],[11,R[119],R[6],E,61,[[["self"]],["u8"]]],[11,R[46],R[103],"Creates a new `DataFrame` from the given `RawFrame` (i.e.…",6,[[[R[32]]],[[R[54],[R[9]]],[R[9]]]]],[11,"is_set",E,R[120],6,[[["self"],[R[143]]],["bool"]]],[11,R[121],E,R[122],6,[[["self"]],[R[8]]]],[11,R[123],E,R[124],6,[[["self"]],[R[3]]]],[11,R[46],R[104],"Creates a new `HeadersFrame` with the given `RawFrame`…",9,[[[R[32]]],[[R[54],[R[13]]],[R[13]]]]],[11,"is_set",E,R[120],9,[[["self"],[R[125]]],["bool"]]],[11,R[121],E,R[122],9,[[["self"]],[R[8]]]],[11,R[123],E,R[124],9,[[["self"]],[R[3]]]],[11,R[46],R[105],E,11,[[[R[32]]],[R[54]]]],[11,"is_set",E,E,11,[[["self"],["noflag"]],["bool"]]],[11,R[121],E,E,11,[[["self"]],[R[8]]]],[11,R[123],E,E,11,[[["self"]],[R[3]]]],[11,R[46],R[106],"Creates a new `SettingsFrame` with the given `RawFrame`…",12,[[[R[32]]],[[R[23]],[R[54],[R[23]]]]]],[11,"is_set",E,R[120],12,[[["self"],[R[126]]],["bool"]]],[11,R[121],E,R[122],12,[[["self"]],[R[8]]]],[11,R[123],E,R[124],12,[[["self"]],[R[3]]]],[11,R[46],R[107],E,15,[[[R[32]]],[R[54]]]],[11,"is_set",E,E,15,[[["self"],["noflag"]],["bool"]]],[11,R[121],E,E,15,[[["self"]],[R[8]]]],[11,R[123],E,E,15,[[["self"]],[R[3]]]],[11,R[46],R[108],E,16,[[[R[32]]],[R[54]]]],[11,"is_set",E,E,16,[[["self"],["pingflag"]],["bool"]]],[11,R[121],E,E,16,[[["self"]],[R[8]]]],[11,R[123],E,E,16,[[["self"]],[R[3]]]],[11,R[46],R[109],E,17,[[[R[32]]],[R[54]]]],[11,"is_set",E,E,17,[[["self"],["noflag"]],["bool"]]],[11,R[121],E,E,17,[[["self"]],[R[8]]]],[11,R[123],E,E,17,[[["self"]],[R[3]]]],[11,R[127],R[110],E,23,[[["self"]],[[R[44],[R[45]]],[R[45]]]]],[11,R[56],R[67],E,49,[[["self"],[R[52]],[R[8]]],[R[44]]]],[11,R[128],E,E,49,[[["self"],["vec",[R[57]]],[R[57]],[R[52]],[R[8]]],[R[44]]]],[11,R[129],E,E,49,[[["self"],[R[52]],[R[8]]],[R[44]]]],[11,R[48],E,E,49,[[["self"],[R[20]],[R[52]],[R[8]]],[R[44]]]],[11,R[130],E,E,49,[[["self"],[R[22]],[R[52]],["vec",[R[22]]]],[R[44]]]],[11,"on_ping",E,E,49,[[["self"],[R[53]],[R[52]]],[R[44]]]],[11,"on_pong",E,E,49,[[["self"],[R[53]],[R[52]]],[R[44]]]],[11,R[56],R[115],E,52,[[["self"],[R[52]],[R[8]]],[R[44]]]],[11,R[128],E,E,52,[[["self"],["vec",[R[57]]],[R[57]],[R[52]],[R[8]]],[R[44]]]],[11,R[129],E,E,52,[[["self"],[R[52]],[R[8]]],[R[44]]]],[11,R[48],E,E,52,[[["self"],[R[20]],[R[52]],[R[8]]],[R[44]]]],[11,R[130],E,E,52,[[["self"],[R[22]],[R[52]],["vec",[R[22]]]],[R[44]]]],[11,"on_ping",E,E,52,[[["self"],[R[53]],[R[52]]],[R[44]]]],[11,"on_pong",E,E,52,[[["self"],[R[53]],[R[52]]],[R[44]]]],[11,R[131],R[112],E,39,[[["self"]],[R[8]]]],[11,R[132],E,E,39,[[["self"],[R[8]]],[R[5]]]],[11,R[133],E,E,39,[[["self"],[R[8]]],[R[54]]]],[11,R[134],E,E,39,[[["self"],[R[8]]],[R[54]]]],[11,R[135],E,E,39,[[["self"],[R[8]]],[R[54]]]],[11,"iter",E,E,39,[[["self"]],[R[136]]]],[11,"len",E,"Number of currently active streams",39,[[["self"]],["usize"]]],[11,R[56],E,E,32,[[["self"]]]],[11,R[137],E,E,32,[[["self"],["vec",[R[57]]],[R[57]]]]],[11,R[138],E,E,32,[[["self"],[R[60]]]]],[11,"state",E,E,32,[[["self"]],[R[60]]]],[11,R[139],E,E,32,[[["self"]],[[R[58]],[R[5],[R[59],R[58]]],[R[59]]]]],[11,R[140],R[113],E,41,[[["self"]],[[R[44],[R[54]]],[R[54],[R[7]]]]]],[11,"connect",R[114],E,46,[[],[[R[66]],[R[68],["sslstream"]],[R[5],[R[68],R[66]]]]]],[11,"connect",R[67],"Establishes a cleartext TCP connection based on the host…",43,[[],[[R[5],[R[68],R[141]]],[R[68],["tcpstream"]],[R[141]]]]],[11,"from",R[103],E,62,[[["vec",["u8"]],["u8"]],[R[7]]]],[11,"from",E,E,62,[[],[R[7]]]],[11,"from",R[6],E,21,[[["vec",["u8"]],["u8"]],[R[32]]]],[11,"from",E,E,21,[[],[R[32]]]],[11,"from",R[112],E,34,[[["e"]],[R[58]]]],[11,"from",R[114],E,47,[[["error"]],[R[66]]]],[11,"from",E,E,47,[[["sslerror"]],[R[66]]]],[11,"from",R[34],E,3,[[["e"]],[R[142]]]],[11,"from",R[67],E,67,[[["error"]],[R[141]]]],[11,"from",R[34],E,60,[[["vec",["u8"]],["u8"]],[R[83]]]],[11,"from",E,E,60,[[],[R[83]]]],[11,"from",E,E,60,[[["cow"]],[R[83]]]],[11,"from",E,E,60,[[],[R[83]]]],[11,"from",E,E,60,[[],[R[83]]]],[11,"from",E,E,60,[[],[R[83]]]],[11,"from",E,E,60,[[],[R[83]]]],[11,"from",E,E,60,[[],[R[83]]]],[11,"from",E,E,60,[[],[R[83]]]],[11,"from",E,E,60,[[],[R[83]]]],[11,"from",E,E,60,[[],[R[83]]]],[11,"from",E,E,60,[[],[R[83]]]],[11,"from",E,E,60,[[],[R[83]]]],[11,"from",E,E,60,[[],[R[83]]]],[11,"from",E,"Converts the given `u32` number to the appropriate…",2,[[["u32"]],[R[20]]]],[11,"from",E,E,3,[[["error"]],[R[142]]]],[11,"next",R[112],E,64,[[["self"]],[R[54]]]],[11,"as_ref",R[6],E,21,[[["self"]]]],[11,"as_ref",R[34],E,2,[[["self"]],["str"]]],[11,"drop",R[116],E,57,[[["self"]]]],[11,"into",R[6],E,21,[[],[["vec",["u8"]],["u8"]]]],[11,"into",R[34],E,53,[[],[R[87]]]],[11,"into",R[94],E,68,[[],[R[57]]]],[11,"into",R[34],E,2,[[],["u32"]]],[11,"clone",R[103],E,7,[[["self"]],[R[143]]]],[11,"clone",E,E,6,[[["self"]],[R[9]]]],[11,"clone",R[104],E,10,[[["self"]],[R[125]]]],[11,"clone",E,E,8,[[["self"]],[R[11]]]],[11,"clone",E,E,9,[[["self"]],[R[13]]]],[11,"clone",R[105],E,11,[[["self"]],[R[19]]]],[11,"clone",R[106],E,13,[[["self"]],[R[22]]]],[11,"clone",E,E,14,[[["self"]],[R[126]]]],[11,"clone",E,E,12,[[["self"]],[R[23]]]],[11,"clone",R[107],E,15,[[["self"]],[R[145]]]],[11,"clone",R[108],E,16,[[["self"]],[R[53]]]],[11,"clone",R[109],E,17,[[["self"]],[R[31]]]],[11,"clone",R[6],E,21,[[["self"]],[R[32]]]],[11,"clone",R[111],E,26,[[["self"]],[R[45]]]],[11,"clone",E,E,27,[[["self"]],[R[49]]]],[11,"clone",E,E,28,[[["self"]],[R[47]]]],[11,"clone",R[112],E,33,[[["self"]],[R[60]]]],[11,"clone",E,E,35,[[["self"]],[R[59]]]],[11,"clone",E,E,32,[[["self"]],[R[62]]]],[11,"clone",R[34],E,53,[[["self"]],[R[57]]]],[11,"clone",E,E,2,[[["self"]],[R[20]]]],[11,"clone",E,E,54,[[["self"]],[R[85]]]],[11,"clone",E,E,55,[[["self"]],[R[144]]]],[11,"clone",E,E,4,[[["self"]],[R[71]]]],[11,"clone",E,E,0,[[["self"]],[R[89]]]],[11,"clone",E,E,1,[[["self"]],["request"]]],[11,"clone",R[116],E,57,[[["self"]],[R[63]]]],[11,"eq",R[103],E,7,[[["self"],[R[143]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[9]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[9]]],["bool"]]],[11,"eq",R[104],E,10,[[["self"],[R[125]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[11]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[11]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[13]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[13]]],["bool"]]],[11,"eq",R[105],E,11,[[["self"],[R[19]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[19]]],["bool"]]],[11,"eq",R[106],E,13,[[["self"],[R[22]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[22]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[126]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[23]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[23]]],["bool"]]],[11,"eq",R[107],E,15,[[["self"],[R[145]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[145]]],["bool"]]],[11,"eq",R[108],E,16,[[["self"],[R[53]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[53]]],["bool"]]],[11,"eq",R[109],E,17,[[["self"],[R[31]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[31]]],["bool"]]],[11,"eq",R[6],E,21,[[["self"],[R[32]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[32]]],["bool"]]],[11,"eq",R[111],E,26,[[["self"],[R[45]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[45]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[49]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[47]]],["bool"]]],[11,"eq",R[112],E,33,[[["self"],[R[60]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[59]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[59]]],["bool"]]],[11,"eq",R[94],E,68,[[["self"],[R[57]]],["bool"]]],[11,"eq",R[34],E,53,[[["self"],[R[87]]],["bool"]]],[11,"eq",E,E,53,[[["self"],[R[57]]],["bool"]]],[11,"ne",E,E,53,[[["self"],[R[57]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[20]]],["bool"]]],[11,"eq",E,E,54,[[["self"],[R[85]]],["bool"]]],[11,"ne",E,E,54,[[["self"],[R[85]]],["bool"]]],[11,"eq",E,E,55,[[["self"],[R[144]]],["bool"]]],[11,"ne",E,E,55,[[["self"],[R[144]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[71]]],["bool"]]],[11,"fmt",R[114],E,47,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[67],E,67,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[34],E,54,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,3,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[103],E,7,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,6,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[104],E,10,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,8,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,9,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[105],E,11,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[106],E,13,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,14,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,12,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[107],E,15,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[108],E,16,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[109],E,17,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[6],E,21,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[111],E,26,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,27,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,28,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[112],E,33,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,34,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,35,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[114],E,47,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[67],E,67,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",R[34],E,60,[[["self"],[R[146]]],[[R[5],["error"]],["error"]]]],[11,"fmt",E,E,53,[[["self"],[R[146]]],[[R[5],["error"]],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,54,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,3,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,55,[[["self"],[R[146]]],[R[5]]]],[11,"fmt",E,E,4,[[["self"],[R[146]]],[R[5]]]],[11,R[147],R[114],E,47,[[["self"]],["str"]]],[11,"cause",E,E,47,[[["self"]],[[R[54],["error"]],["error"]]]],[11,R[147],R[67],E,67,[[["self"]],["str"]]],[11,"cause",E,E,67,[[["self"]],[[R[54],["error"]],["error"]]]],[11,R[147],R[34],E,54,[[["self"]],["str"]]],[11,R[147],E,E,3,[[["self"]],["str"]]],[11,"cause",E,E,3,[[["self"]],[[R[54],["error"]],["error"]]]]],"p":[[3,"Response"],[3,"Request"],[4,R[148]],[4,R[149]],[4,R[150]],[8,R[151]],[3,R[36]],[4,"DataFlag"],[3,R[152]],[3,R[37]],[4,R[153]],[3,R[38]],[3,R[39]],[4,R[154]],[4,R[155]],[3,R[41]],[3,R[40]],[3,R[42]],[8,"FrameIR"],[8,"Flag"],[8,"Frame"],[3,"RawFrame"],[8,R[156]],[3,R[157]],[3,R[158]],[3,R[35]],[4,R[159]],[4,R[160]],[4,R[10]],[8,R[161]],[8,R[162]],[3,R[163]],[3,R[164]],[4,R[165]],[4,R[166]],[4,R[167]],[8,"Session"],[8,R[168]],[8,"Stream"],[3,R[169]],[8,R[170]],[3,R[171]],[3,R[172]],[3,R[173]],[3,R[174]],[3,R[175]],[3,R[176]],[4,R[177]],[8,R[178]],[3,R[179]],[3,R[180]],[8,R[181]],[3,R[182]],[3,"Header"],[3,R[183]],[3,R[184]],[3,R[185]],[3,"Client"],[3,R[186]],[3,R[187]],[3,R[188]],[3,"NoFlag"],[3,R[35]],[3,"PingFlag"],[3,R[189]],[3,"Client"],[3,"Server"],[3,R[190]],[6,R[191]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);